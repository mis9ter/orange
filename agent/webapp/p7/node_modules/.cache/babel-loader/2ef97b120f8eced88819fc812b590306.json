{"remainingRequest":"C:\\WORK\\orange\\agent\\webapp\\p7\\node_modules\\thread-loader\\dist\\cjs.js!C:\\WORK\\orange\\agent\\webapp\\p7\\node_modules\\babel-loader\\lib\\index.js!C:\\WORK\\orange\\agent\\webapp\\p7\\node_modules\\vuetify\\lib\\components\\VDatePicker\\util\\sanitizeDateString.js","dependencies":[{"path":"C:\\WORK\\orange\\agent\\webapp\\p7\\node_modules\\vuetify\\lib\\components\\VDatePicker\\util\\sanitizeDateString.js","mtime":499162500000},{"path":"C:\\WORK\\orange\\agent\\webapp\\p7\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\WORK\\orange\\agent\\webapp\\p7\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\WORK\\orange\\agent\\webapp\\p7\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9zbGljZWRUb0FycmF5IGZyb20gIkM6L1dPUksvb3JhbmdlL2FnZW50L3dlYmFwcC9wNy9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vc2xpY2VkVG9BcnJheSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnNwbGl0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKLy8gQWRkcyBsZWFkaW5nIHplcm8gdG8gbW9udGgvZGF5IGlmIG5lY2Vzc2FyeSwgcmV0dXJucyAnWVlZWScgaWYgdHlwZSA9ICd5ZWFyJywKLy8gJ1lZWVktTU0nIGlmICdtb250aCcgYW5kICdZWVlZLU1NLUREJyBpZiAnZGF0ZScKaW1wb3J0IHBhZCBmcm9tICcuL3BhZCc7CmV4cG9ydCBkZWZhdWx0IChmdW5jdGlvbiAoZGF0ZVN0cmluZywgdHlwZSkgewogIHZhciBfZGF0ZVN0cmluZyRzcGxpdCA9IGRhdGVTdHJpbmcuc3BsaXQoJy0nKSwKICAgICAgX2RhdGVTdHJpbmckc3BsaXQyID0gX3NsaWNlZFRvQXJyYXkoX2RhdGVTdHJpbmckc3BsaXQsIDMpLAogICAgICB5ZWFyID0gX2RhdGVTdHJpbmckc3BsaXQyWzBdLAogICAgICBfZGF0ZVN0cmluZyRzcGxpdDIkID0gX2RhdGVTdHJpbmckc3BsaXQyWzFdLAogICAgICBtb250aCA9IF9kYXRlU3RyaW5nJHNwbGl0MiQgPT09IHZvaWQgMCA/IDEgOiBfZGF0ZVN0cmluZyRzcGxpdDIkLAogICAgICBfZGF0ZVN0cmluZyRzcGxpdDIkMiA9IF9kYXRlU3RyaW5nJHNwbGl0MlsyXSwKICAgICAgZGF0ZSA9IF9kYXRlU3RyaW5nJHNwbGl0MiQyID09PSB2b2lkIDAgPyAxIDogX2RhdGVTdHJpbmckc3BsaXQyJDI7CgogIHJldHVybiAiIi5jb25jYXQoeWVhciwgIi0iKS5jb25jYXQocGFkKG1vbnRoKSwgIi0iKS5jb25jYXQocGFkKGRhdGUpKS5zdWJzdHIoMCwgewogICAgZGF0ZTogMTAsCiAgICBtb250aDogNywKICAgIHllYXI6IDQKICB9W3R5cGVdKTsKfSk7"},{"version":3,"sources":["../../../../src/components/VDatePicker/util/sanitizeDateString.ts"],"names":[],"mappings":";;;;AAAA;AACA;AACA,OAAA,GAAA,MAAA,OAAA;AAEA,gBAAe,UAAA,UAAA,EAAA,IAAA,EAAgE;AAC7E,0BAAoC,UAAU,CAAV,KAAA,CAApC,GAAoC,CAApC;AAAA;AAAA,MAAM,IAAN;AAAA;AAAA,MAAa,KAAb,oCAAM,CAAN;AAAA;AAAA,MAAwB,IAAxB,qCAAM,CAAN;;AACA,SAAO,UAAG,IAAH,cAAW,GAAG,CAAA,KAAA,CAAd,cAAyB,GAAG,CAA5B,IAA4B,CAA5B,EAAA,MAAA,CAAA,CAAA,EAA+C;AAAE,IAAA,IAAI,EAAN,EAAA;AAAY,IAAA,KAAK,EAAjB,CAAA;AAAsB,IAAA,IAAI,EAAE;AAA5B,IAAtD,IAAsD,CAA/C,CAAP;AAFF,CAAA","sourcesContent":["// Adds leading zero to month/day if necessary, returns 'YYYY' if type = 'year',\n// 'YYYY-MM' if 'month' and 'YYYY-MM-DD' if 'date'\nimport pad from './pad'\n\nexport default (dateString: string, type: 'date' | 'month' | 'year'): string => {\n  const [year, month = 1, date = 1] = dateString.split('-')\n  return `${year}-${pad(month)}-${pad(date)}`.substr(0, { date: 10, month: 7, year: 4 }[type])\n}\n"],"sourceRoot":""}]}