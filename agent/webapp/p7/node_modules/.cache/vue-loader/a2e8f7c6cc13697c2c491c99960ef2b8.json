{"remainingRequest":"C:\\WORK\\orange\\agent\\webapp\\p7\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\WORK\\orange\\agent\\webapp\\p7\\src\\components\\pprocess.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\WORK\\orange\\agent\\webapp\\p7\\src\\components\\pprocess.vue","mtime":1621416763988},{"path":"C:\\WORK\\orange\\agent\\webapp\\p7\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\WORK\\orange\\agent\\webapp\\p7\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\WORK\\orange\\agent\\webapp\\p7\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\WORK\\orange\\agent\\webapp\\p7\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\WORK\\orange\\agent\\webapp\\p7\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCiNteWNvbnRhaW5lciB7CiAgICAvL3Bvc2l0aW9uOiBhYnNvbHV0ZTsKICAgIC8vd2lkdGg6IDEwMCU7CiAgICBoZWlnaHQ6IDEwMCU7CiAgICBkaXNwbGF5OiBmbGV4OwogICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsKICAgIG92ZXJmbG93OiBoaWRkZW47Cn0KI291dGVyIHsKICAgIGZsZXg6IDE7Cn0KLnYtZXhwYW5zaW9uLXBhbmVsIHsKICAgIGJveC1zaGFkb3c6IG5vbmU7CiAgICB3aWR0aDozMCUKfQo="},{"version":3,"sources":["pprocess.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"pprocess.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <v-container fluid id=\"mycontainer\">\r\n        <v-alert outlined\r\n            v-model=\"alert\"\r\n            dismissible\r\n            elevation=\"2\"\r\n            color=\"orange\">\r\n            <div class=\"title\">\r\n                Lorem Ipsum\r\n            </div>\r\n            <div>Maecenas ullamcorper, dui et placerat feugiat, eros pede varius nisi, condimentum viverra felis nunc et lorem. Duis vel nibh at velit scelerisque suscipit. Praesent blandit laoreet nibh. Aenean posuere, tortor sed cursus feugiat, nunc augue blandit nunc, eu sollicitudin urna dolor sagittis lacus. Etiam sollicitudin, ipsum eu pulvinar rutrum, tellus ipsum laoreet sapien, quis venenatis ante odio sit amet eros.</div>\r\n        </v-alert>\r\n        <v-card>\r\n            <v-card-title>\r\n                PPROCESS\r\n                <v-spacer></v-spacer>\r\n                <v-text-field v-model=\"keyword\"\r\n                              append-icon=\"mdi-magnify\"\r\n                              label=\"Search\"\r\n                              single-line\r\n                              hide-details></v-text-field>\r\n            </v-card-title>\r\n            <div id=\"outer\">\r\n                <resizable-page>\r\n                    <template v-slot:table=\"tableProps\">\r\n                        <v-data-table id=\"mytable\"\r\n                                      :headers=\"headers\"\r\n                                      :items=\"items\"\r\n                                      :item-key=\"key\"\r\n                                      :height=\"tableProps.tableHeight\"\r\n                                      :loading=\"loading\"\r\n                                      :search=\"keyword\"\r\n                                      disable-pagination\r\n                                      fixed-header\r\n                                      hide-default-footer\r\n                                      v-columns-resizable\r\n                                      class=\"elevation-1\">\r\n                            <template v-slot:item.ProcName=\"{item}\">\r\n                                <v-expansion-panels flat>\r\n                                    <v-expansion-panel>\r\n                                        <v-expansion-panel-header class=\"title\">\r\n                                            {{item.ProcName}}\r\n                                        </v-expansion-panel-header>\r\n                                        <v-expansion-panel-content>\r\n                                            {{item.ProcPath}}\r\n                                        </v-expansion-panel-content>\r\n                                    </v-expansion-panel>\r\n                                </v-expansion-panels>\r\n                            </template>\r\n                            <template v-slot:item.cnt=\"{ item }\">\r\n                                <v-chip :color=\"getColor(item.cnt)\"\r\n                                        dark>\r\n                                    {{ item.cnt }}\r\n                                </v-chip>\r\n                            </template>\r\n                            <v-progress-circular :size=\"70\"\r\n                                                 :width=\"7\"\r\n                                                 color=\"orange\"\r\n                                                 indeterminate>\r\n                            </v-progress-circular>\r\n                        </v-data-table>\r\n                    </template>\r\n                </resizable-page>\r\n            </div>\r\n        </v-card>\r\n    </v-container>\r\n\r\n</template>\r\n<script>\r\n    import ResizablePage from \"../components/resizable-page\";\r\n    import Control from \"../common/control.js\"\r\n\r\n    export default {\r\n        name: 'PProcess',\r\n        components: {\r\n            ResizablePage,\r\n            Control\r\n        },\r\n        data: () => ({\r\n            headers: [],\r\n            items: [],\r\n            height: 100,\r\n            loading: false,\r\n            keyword:'',\r\n            req: {\r\n                \"header\": {\r\n                    \"command\": \"sqlite3.query\",\r\n                    \"type\": \"unknown\",\r\n                    \"query\": \"select ProcName, ProcPath, count(*) cnt, sum(KernelTime+UserTime) time, sum(KernelTime) ktime, sum(UserTime) utime from process where bootid=? group by ProcPath order by time desc\",\r\n                    \"bind\": [\r\n                        {\r\n                            \"type\": 0,\r\n                            \"value\": 50\r\n                        }\r\n                    ],\r\n                    \"reqid\":0\r\n                }\r\n            }\r\n        }),\r\n        computed: {\r\n\r\n        },\r\n        created() {\r\n            Control.setResponse(this.response)\r\n        },\r\n        destroyed() {\r\n            Control.removeResponse(this.response)\r\n        },\r\n        methods: {\r\n            getHeight() {\r\n                //console.log(document.getElementById(\"mytable\"));\r\n                var h = document.getElementById(\"app-vmain\").clientHeight;\r\n                //console.log('getHeight()=' + h)\r\n                return h;\r\n\r\n            },\r\n            onResize() {\r\n                this.height = this.getHeight()\r\n            },\r\n            response: function (event) {\r\n                const res = JSON.parse(event.data)\r\n                try {\r\n                    if (true == res.result.ret) {\r\n                        switch (res.header.reqid) {\r\n                            case 0:\r\n                                this.items = []\r\n                                for (var i = 0; i < res.data.row.length; i++) {\r\n                                    //console.log(res.data.row[i])\r\n                                    this.items.push(res.data.row[i])\r\n                                }\r\n                                break;\r\n                        }\r\n\r\n                    }\r\n                    else {\r\n                        alert(res.result.msg)\r\n                    }\r\n                } catch (error) {\r\n                    this.items  = []\r\n                    console.error(error)\r\n                }\r\n                this.onResize()\r\n                this.loading    = false\r\n            },\r\n            request: function (obj) {\r\n                this.loading = true\r\n                Control.request(obj)\r\n            },\r\n            getColor(val) {\r\n                if (val > 400) return 'red'\r\n                else if (val > 200) return 'orange'\r\n                else return 'green'\r\n            },\r\n        },\r\n        mounted() {\r\n            console.log('mounted()')\r\n            this.headers.push({ text: \"프로세스\", value: \"ProcName\" })\r\n            //this.headers.push({ text: \"파일경로\", value: \"ProcPath\" })\r\n            this.headers.push({ text: \"실행횟수\", value: \"cnt\" })\r\n            this.headers.push({ text: \"크래시\", value: \"\" })\r\n\r\n            //  file\r\n            this.headers.push({ text: \"폴더생성\", value: \"\" })\r\n            this.headers.push({ text: \"폴더삭제\", value: \"\" })\r\n            this.headers.push({ text: \"파일생성\", value: \"\" })\r\n            this.headers.push({ text: \"파일삭제\", value: \"\" })\r\n            this.headers.push({ text: \"쓰기\", value: \"\" })\r\n            this.headers.push({ text: \"읽기\", value: \"\" })            \r\n\r\n            //  registry\r\n            this.headers.push({ text: \"키생성\", value: \"\" })\r\n            this.headers.push({ text: \"키삭제\", value: \"\" })\r\n            this.headers.push({ text: \"값생성\", value: \"\" })\r\n            this.headers.push({ text: \"값삭제\", value: \"\" })\r\n            this.headers.push({ text: \"쓰기\", value: \"\" })\r\n            this.headers.push({ text: \"읽기\", value: \"\" })            \r\n\r\n            //  networking\r\n            this.headers.push({ text: \"DNS쿼리\", value: \"\" })\r\n            this.headers.push({ text: \"접속IP\", value: \"\" })\r\n            this.headers.push({ text: \"송신\", value: \"\" })\r\n            this.headers.push({ text: \"수신\", value: \"\" })\r\n            \r\n            this.headers.push({ text: \"CPU시간\", value: \"time\" })\r\n            this.headers.push({ text: \"커널시간\", value: \"ktime\" })\r\n            this.headers.push({ text: \"유저시간\", value: \"utime\" })\r\n\r\n            this.request(this.req)\r\n            //for (var i = 1; i <= 100; i++) {\r\n            //    this.items.push({ key: i, a: \"Row \" + i, b: \"Column B\", c: \"Column C\" });\r\n            //    //this.items.push({ i: { a: \"Row \" + i, b: \"Column B\", c: \"Column C\" } });\r\n            //}\r\n            window.addEventListener(\"resize\", this.onResize);\r\n            this.$nextTick(this.onResize);\r\n        }\r\n    }\r\n</script>\r\n<style>\r\n\r\n    #mycontainer {\r\n        //position: absolute;\r\n        //width: 100%;\r\n        height: 100%;\r\n        display: flex;\r\n        flex-direction: column;\r\n        overflow: hidden;\r\n    }\r\n    #outer {\r\n        flex: 1;\r\n    }\r\n    .v-expansion-panel {\r\n        box-shadow: none;\r\n        width:30%\r\n    }\r\n</style>"]}]}